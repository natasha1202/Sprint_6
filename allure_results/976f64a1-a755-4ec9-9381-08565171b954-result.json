{"name": "test_question_answer_paar[4-\\u041f\\u043e\\u043a\\u0430 \\u0447\\u0442\\u043e \\u043d\\u0435\\u0442! \\u041d\\u043e \\u0435\\u0441\\u043b\\u0438 \\u0447\\u0442\\u043e-\\u0442\\u043e \\u0441\\u0440\\u043e\\u0447\\u043d\\u043e\\u0435 \\u2014 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u043c\\u043e\\u0436\\u043d\\u043e \\u043f\\u043e\\u0437\\u0432\\u043e\\u043d\\u0438\\u0442\\u044c \\u0432 \\u043f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u043a\\u0443 \\u043f\\u043e \\u043a\\u0440\\u0430\\u0441\\u0438\\u0432\\u043e\\u043c\\u0443 \\u043d\\u043e\\u043c\\u0435\\u0440\\u0443 1010.]", "status": "broken", "statusDetails": {"message": "TypeError: MainPage.accept_cookie() takes 1 positional argument but 2 were given", "trace": "self = <tests.test_main_page.TestMainPage object at 0x000001E7F572EE10>, main_page = <page_object.pages.main_page.MainPage object at 0x000001E7F5789A60>, number = 4\nexpected_text = 'Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.'\n\n    @pytest.mark.parametrize(\n        \"number, expected_text\",\n        [\n            (0, data.ANSWER_1),\n            (1, data.ANSWER_2),\n            (2, data.ANSWER_3),\n            (3, data.ANSWER_4),\n            (4, data.ANSWER_5),\n            (5, data.ANSWER_6),\n            (6, data.ANSWER_7),\n            (7, data.ANSWER_8)\n        ]\n    )\n    @allure.description('Тест проверяет текст ответов на вопросы')\n    def test_question_answer_paar(self, main_page, number, expected_text):\n    \n>       main_page.accept_cookie(MainPageLocators.ACCEPT_COOKIE_BUTTON)\nE       TypeError: MainPage.accept_cookie() takes 1 positional argument but 2 were given\n\ntests\\test_main_page.py:26: TypeError"}, "description": "Тест проверяет текст ответов на вопросы", "parameters": [{"name": "number", "value": "4"}, {"name": "expected_text", "value": "'Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.'"}], "start": 1709313118588, "stop": 1709313122661, "uuid": "4c63ec72-f02d-43ee-bd80-3b18b21ef2a2", "historyId": "4bc5891323ed2fa14ff4504f73e55d47", "testCaseId": "73cbf84514199907b466b1e13851c921", "fullName": "tests.test_main_page.TestMainPage#test_question_answer_paar", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "LAPTOP-IE2IJGHD"}, {"name": "thread", "value": "17936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}